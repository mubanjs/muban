import{o as n,c as s,a}from"./app.7a437beb.js";import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";const t={},o={class:"language-typescript ext-ts line-numbers-mode"},e=a(`<pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&#39;toggle-expand&#39;</span><span class="token punctuation">,</span>
  props<span class="token operator">:</span> <span class="token punctuation">{</span>
    isExpanded<span class="token operator">:</span> propType<span class="token punctuation">.</span><span class="token builtin">boolean</span><span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token function">optional</span><span class="token punctuation">(</span>isBoolean<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  refs<span class="token operator">:</span> <span class="token punctuation">{</span>
    expandButton<span class="token operator">:</span> <span class="token function">refElement</span><span class="token punctuation">(</span><span class="token string">&#39;expand-button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    expandContent<span class="token operator">:</span> <span class="token string">&#39;expand-content&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">{</span> props<span class="token punctuation">,</span> refs <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>isExpanded<span class="token punctuation">,</span> toggleExpanded<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useToggle</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>isExpanded <span class="token operator">??</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> expandButtonLabel <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">getButtonLabel</span><span class="token punctuation">(</span>isExpanded<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token punctuation">[</span>
      <span class="token function">bind</span><span class="token punctuation">(</span>refs<span class="token punctuation">.</span>expandButton<span class="token punctuation">,</span> <span class="token punctuation">{</span> text<span class="token operator">:</span> expandButtonLabel<span class="token punctuation">,</span> <span class="token function-variable function">click</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">toggleExpanded</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function">bind</span><span class="token punctuation">(</span>refs<span class="token punctuation">.</span>self<span class="token punctuation">,</span> <span class="token punctuation">{</span>
        css<span class="token operator">:</span> <span class="token punctuation">{</span> isExpanded <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div>`,2),c=[e];function u(l,i){return n(),s("div",o,c)}var b=p(t,[["render",u]]);export{b as default};
